{
  "constant": {},
  "init": [],
  "flows": {
    "dataFormat/init": [
      {
        "id": "dataFormatDataAdd1",
        "type": "mysql.execute",
        "sqlType": "INSERT",
        "sql": "INSERT INTO `t_component_test`(`id`, `name`, `size`, `data`, `create_time`, `update_time`, `delete_flag`) VALUES (10, 'INIT', 10, '[{\"id\":1}]', NOW(), NOW(), 0);"
      },{
        "id": "dataFormatDataAdd2",
        "type": "mysql.execute",
        "sqlType": "INSERT",
        "sql": "INSERT INTO `t_component_test`(`id`, `name`, `size`, `data`, `create_time`, `update_time`, `delete_flag`) VALUES (20, 'INIT2', 19, '[{\"id\":1},{\"id\":2}]', NOW(), NOW(), 0);"
      },{
        "id": "dataFormatDataAdd3",
        "type": "mysql.execute",
        "sqlType": "INSERT",
        "sql": "INSERT INTO `t_component_test`(`id`, `name`, `size`, `data`, `create_time`, `update_time`, `delete_flag`) VALUES (30, 'INIT2', 29, '[{\"id\":1},{\"id\":2},{\"id\":3}]', NOW(), NOW(), 0);"
      }
    ],
    "dataFormat/json": [
      {
        "id": "dataFormatData1",
        "type": "data.mapping",
        "items": [
          {"fieldName":"id", "source":"30"},
          {"fieldName":"data", "source":"[{\"id\":\"100\",\"name\":\"test\"}]"},
          {"fieldName":"flag", "source":"0"},
          {"fieldName":"name", "source":"INIT"}
        ]
      },{
        "id": "dataFormatJson1",
        "type": "data.format",
        "items": [
          {"source":"#{$r.dataFormatData1.data}", "function":"JSON", "params":"JSON_TO_LIST"}
        ]
      },{
        "id": "dataFormatJson2",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatJson1.[0].[0]}", "function":"JSON", "params":"TO_JSON"}
        ]
      },{
        "id": "dataFormatJson3",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatJson2.[0]}", "function":"JSON", "params":"JSON_TO_OBJECT"}
        ]
      }
    ],
    "dataFormat/clear": [
      {
        "id": "dataFormatData2",
        "type": "mysql.execute",
        "sqlType": "SELECT",
        "sql": "select * from t_component_test where id in (1, 10, 20);"
      },{
        "id": "dataFormatClear",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData2}", "function":"CLEAR_DUPLICATE", "params":["name,delete_flag"]}
        ]
      }
    ],
    "dataFormat/sort": [
      {
        "id": "dataFormatData3",
        "type": "mysql.execute",
        "sqlType": "SELECT",
        "sql": "select * from t_component_test;"
      },{
        "id": "dataFormatSort",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData3}", "function":"SORT", "params":"size"}
        ]
      },{
        "id": "dataFormatSort2",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData3}", "function":"SORT", "params":["size", "desc"]}
        ]
      }
    ],
    "dataFormat/convert1": [
      {
        "id": "dataFormatData4",
        "type": "mysql.execute",
        "sqlType": "SELECT",
        "sql": "select * from t_component_test where id in (10,20,30)"
      },{
        "id": "dataFormatConvert1",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData4.[0]}", "function":"TEXT_CONVERT", "params":["MODEL_TO_TEXT", "id,name", "/"]}
        ]
      },{
        "id": "dataFormatConvert31",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatConvert1.[0]}", "function":"TEXT_CONVERT", "params":["TEXT_TO_MODEL", "id,name", "/"]}
        ]
      }
    ],
    "dataFormat/convert2": [
      {
        "id": "dataFormatData4"
      },{
        "id": "dataFormatConvert21",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData4}", "function":"TEXT_CONVERT", "params":["MODELS_TO_TEXTS", "id,name", "/"]}
        ]
      },{
        "id": "dataFormatConvert4",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatConvert21.[0]}", "function":"TEXT_CONVERT", "params":["TEXTS_TO_MODELS", "id,name", "/"]}
        ]
      }
    ],
    "dataFormat/convert3": [
      {
        "id": "dataFormatData4"
      },{
        "id": "dataFormatConvert22",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData4}", "function":"TEXT_CONVERT", "params":["MODELS_TO_TEXT", "id,name", "/", "&"]}
        ]
      },{
        "id": "dataFormatConvert32",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatConvert22.[0]}", "function":"TEXT_CONVERT", "params":["TEXT_TO_MODELS", "id,name", "/", "&"]}
        ]
      }
    ],
    "dataFormat/group": [
      {
        "id": "dataFormatData5",
        "type": "mysql.execute",
        "sqlType": "SELECT",
        "sql": "select * from t_component_test;"
      },{
        "id": "dataFormatGroup",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData5}", "function":"GROUP", "params":"name"}
        ]
      }
    ],
    "dataFormat/map": [
      {
        "id": "dataFormatData4"
      },{
        "id": "dataFormatMap",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData4}", "function":"TO_MAP", "params":["id", "data"]}
        ]
      }
    ],
    "dataFormat/rang": [
      {
        "id": "dataFormatData5"
      },{
        "id": "dataFormatRang",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{$r.dataFormatData5}", "function":"RANG", "params":["1", "2"]}
        ]
      }
    ],
    "dataFormat/tree": [
      {
        "id": "dataFormatTree",
        "type": "data.format",
        "replace": false,
        "items": [
          {"source":"#{list}", "function":"TO_TREE", "params":["id", "parentId", "children"]}
        ]
      }
    ],
    "dataFormat/md5": [
      {
        "id": "dataFormatMd5",
        "type": "data.format",
        "replace": true,
        "items": [
          {"source":"#{data}", "function":"MD5"}
        ]
      }
    ]
  }
}

