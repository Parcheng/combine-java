{
  "constant": {},
  "init": [{
    "type": "html.page.build",
    "baseUrl": "http://127.0.0.1:8888/combine",
    "flagConfig": {}
  }],
  "blocks": [
    {
      "id": "system_settings_load",
      "type": "html.dataload.flow.register",
      "config": {
        "mode": "POST",
        "url": "/flow/settings/list",
        "params": {}
      }
    },{
      "id": "system_config_load",
      "type": "html.dataload.flow.register",
      "config": {
        "mode": "POST",
        "url": "/flow/config/get",
        "params": {}
      }
    },

    {
      "id": "empty_list",
      "type": "html.template.list.register",
      "config": {
        "defaultText": {
          "style": "padding:5px;font-size:16px;text-align:left;border:0;"
        }
      }
    },

    {
      "id": "system_api_nav",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.navBar.register",
          "config": {
            "dataload": "system_settings_load",
            "brandText": "Combine-Java",
            "defaultChecked": 0,
            "defaultNavs": [{
              "text": "首页",
              "index": 0,
              "triggers": [{
                "type": "html.trigger.load.register",
                "config": {
                  "event": "click",
                  "groupId": "system_api_home_tree",
                  "parentId": "element_left"
                }
              }]
            }],
            "nav": {
              "text": "${name}",
              "triggers": [{
                "type": "html.trigger.load.register",
                "config": {
                  "event": "click",
                  "groupId": "system_api_tree",
                  "parentId": "element_left",
                  "params": "${settings}"
                }
              }]
            }
          }
        }
      ]
    },{
      "id": "system_api_tree",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.tree.register",
          "config": {
            "textField": "name",
            "checkFirst": true,
            "triggers": [{
              "type": "html.trigger.load.register",
              "config": {
                "event": "click",
                "groupId": "system_api_content",
                "parentId": "element_content",
                "params": "${}"
              }
            }]
          }
        }
      ]
    },{
      "id": "system_api_home_tree",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.tree.register",
          "config": {
            "data": [
              { "name": "概要", "groupId": "system_api_home_content" },
              { "name": "全局配置", "groupId": "system_api_config_content" }
            ],
            "textField": "name",
            "checkFirst": true,
            "triggers": [{
              "type": "html.trigger.load.register",
              "config": {
                "event": "click",
                "groupId": "${groupId}",
                "parentId": "element_content",
                "params": "${}"
              }
            }]
          }
        }
      ]
    },{
      "id": "system_api_home_content",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.title.register",
          "config": {
            "text": "【${name}】",
            "level": 4,
            "top": false,
            "bottom": true
          }
        },
        {
          "type": "html.element.text.register",
          "config": {
            "lines": [
              { "text": "使用方式：" },
              { "text": "第一：需要一个全局配置文件 “combine_java.json” 放在 resource 根目录下，配置项详见 “全局配置” 菜单" },
              { "text": "第二：需要至少一个流程配置文件，格式如下" },
              { "text": "{" },
              { "text": "　\"constant\": {...},　　　　　　　　　　【表示常量定义，可以自由的定义常量，并能够在流程配置中使用 $c.xxx 来获取它们】" },
              { "text": "　\"init\": [{...}, ...],　　　　　　　　　　【表示组件的初始化配置，配置项详见对应组件（每个组件配置项不同）】" },
              { "text": "　\"blocks\": [{...}, ...],　　　　　　　　　　【表示逻辑块配置，此处配置的逻辑块，可以被流程配置引用，主要用途：使需要被多次使用的组件可以复用】" },
              { "text": "　\"before\": [{　　　　　　　　　　【表示流程前置逻辑，在流程（接口）逻辑之前执行，也可以作为拦截器/过滤器使用】" },
              { "text": "　　\"id\": \"\",　　　　　　　　　　【选填，表示前置逻辑的ID】" },
              { "text": "　　\"order\": 1,　　　　　　　　　　【选填，表示执行的优先级，数字越小越先执行】" },
              { "text": "　　\"failStop\": true,　　　　　　　　　　【选填，表示执行失败是否中止（不再执行后面的所有前置/后置和流程的逻辑），默认为 true】" },
              { "text": "　　\"flow\": [{...}, ...],　　　　　　　　　　【必填，表示要执行的流程配置】" },
              { "text": "　　\"includes\": [\"user/save\", \"user/*\", \"*/save\", \"*/*\"],　　　　　　　　　　【选填，配置要执行该前置逻辑的流程集合，可使用 * 通配符" },
              { "text": "　　\"excludes\": [\"user/save\"]　　　　　　　　　　【选填，配置不需要执行该前置逻辑的流程集合，可使用 * 通配符，注意 includes 和 excludes 仅可选择一个来配置" },
              { "text": "　}, ...]," },
              { "text": "　\"after\": [{　　　　　　　　　　【表示流程后置逻辑，在流程（接口）逻辑之后执行，注意后置逻辑的执行结果不会输出】" },
              { "text": "　　....　　　　　　　　　　【同 before 相同】" },
              { "text": "　}, ...]," },
              { "text": "　\"flows\": {　　　　　　　　　　【表示逻辑块配置，此处配置的逻辑块，可以被流程配置引用，主要用途：使需要被多次使用的组件可以复用】" },
              { "text": "　　\"user/save\": [　　　　　　　　　　【表示每个流程（接口）的配置，表示接口路径（最多支持两级）" },
              { "text": "　　　{...}, ...　　　　　　　　　　【该数组表示组件的集合，组件会按照定义的顺序执行，配置项详见对应组件（每个组件配置项不同）】" },
              { "text": "　　]" },
              { "text": "　}" },
              { "text": "<hr>" },
              { "text": "注意：同一个ID的组件只会加载一次（配置以第一个为准），所以当一个组件需要反复使用时可以写成如下" },
              { "text": "\"flows\": {" },
              { "text": "　\"user/save\":[" },
              { "text": "　　{ id: \"user_save_1\", type: \"access.mysql\", .... }" },
              { "text": "　]," },
              { "text": "　\"list\":[" },
              { "text": "　　{ id: \"user_save_1\" }　　　　　　　　　　【相当于沿用上面 id 为 user_save_1 组件的执行逻辑配置，即使在这里加了其他配置项也不会生效】" },
              { "text": "　]" },
              { "text": "}" },
              { "text": "此功能可以理解为，同一个组件的功能需要在多个流程中使用时，只需要第一次将该组件配置定义好，其他地方引用这个ID即可（如：上面的 { id: \"user_save_1\" }）" },
              { "text": "<hr>" },
              { "text": "全局变量 $r 用于获取其它组件的结果" },
              { "text": "如：$r.user_query.[0].id 表示获取ID为“user_query”组件的执行结果的第一行数据的id字段的值" },
              { "text": "　" },
              { "text": "全局变量 $c 用于获取 constant 中配置的常量" },
              { "text": "如：$c.user.name 表示获取常量配置中 user 对象的 name 属性的值" },
              { "text": "　" },
              { "text": "全局变量 $v 用于获取和设置流程中变量，该变量的内容可以在当前流程中的各个组件中使用" },
              { "text": "如：$v.index 表示获取流程中 index 属性的值" },
              { "text": "　" },
              { "text": "全局变量 $h 用于获取请求头的内容，该变量的内容可以在当前流程中的各个组件中使用" },
              { "text": "如：$h.requestId 表示获取流程中 requestId 属性的值" },
              { "text": "<hr>" }
            ]
          }
        }
      ]
    },{
      "id": "system_api_config_content",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.title.register",
          "config": {
            "text": "${name}",
            "level": 4,
            "top": false,
            "bottom": true
          }
        },
        {
          "type": "html.element.text.register",
          "config": {
            "dataload": "system_config_load",
            "lines": [
              { "text": "<b>${key} - ${name}</b>" },
              { "text": "类型: ${type} | 必填: ${isRequired} | 数组: ${isArray} | 默认值: ${defaultValue:无}" },
              { "title": "描述：", "text": "${desc}" },
              { "text": "<hr>" }
            ],
            "children": ["${children}"]
          }
        }
      ]
    },{
      "id": "system_api_content",
      "type": "html.group.register",
      "elements": [
        {
          "type": "html.element.content.register",
          "config": {
            "text": ["${desc}"]
          }
        },{
          "type": "html.element.title.register",
          "config": {
            "text": "1. 组件初始化配置",
            "level": 3,
            "top": true,
            "bottom": true
          }
        },{
          "type": "html.element.text.register",
          "config": {
            "dataField": "initConfig",
            "lines": [
              { "text": "<b>${key} - ${name}</b>" },
              { "text": "类型: ${type} | 必填: ${isRequired} | 数组: ${isArray} | 默认值: ${defaultValue:无}" },
              { "title": "可选值：", "data": "${options}", "text": "${key}（${name}）", "separator": " |  " },
              { "title": "示例：", "data": "${egs}", "text": "  “${value}” 表示：${desc}" },
              { "title": "描述：", "text": "${desc}" },
              { "text": "<hr>" }
            ],
            "children": ["${children}"],
            "defaultText": "（该组件无初始化配置）"
          }
        },{
          "type": "html.element.title.register",
          "config": {
            "text": "2. 组件逻辑配置",
            "level": 3,
            "top": true,
            "bottom": true
          }
        },{
          "type": "html.element.text.register",
          "config": {
            "dataField": "logicConfig",
            "lines": [
              { "text": "<b>${key} - ${name}</b>" },
              { "text": "类型: ${type} | 必填: ${isRequired} | 数组: ${isArray} | 默认值: ${defaultValue:无}" },
              { "title": "可选值：", "data": "${options}", "text": "${key}（${name}）", "separator": " |  " },
              { "title": "示例：", "data": "${egs}", "text": "  “${value}” 表示：${desc}" },
              { "title": "描述：", "text": "${desc}" },
              { "text": "<hr>" }
            ],
            "children": ["${children}"]
          }
        }
      ]
    }
  ],
  "flows": {
    "page/api": [
      {
        "type": "html.page.build",
        "groupIds": ["system_api_nav", "system_api_tree", "system_api_home_tree", "system_api_home_content", "system_api_config_content", "system_api_content"],
        "modules": [
          {
            "key": "header",
            "defaultShowGroupId": "system_api_nav",
            "config": {}
          },{
            "key": "left",
            "config": {
              "id": "element_left",
              "classes": "c-model",
              "style": "width:19%;"
            }
          },{
            "key": "content",
            "config": {
              "id": "element_content",
              "classes": "c-model",
              "style": "width:80%;border-left:1px solid #F5F5F5;padding-left:20px;margin-bottom:50px"
            }
          }
        ]
      }
    ]
  }
}